#include <FastLED.h>

// String info
#define NUM_STRINGS 42
#define NUM_LEDS_PER_STRING 10
#define LED_TYPE WS2811
CRGB leds[NUM_STRINGS][NUM_LEDS_PER_STRING];

// Color info
const int color_neg_three = CRGB(50, 100, 150);
const int color_neg_two = CRGB(50, 100, 150);
const int color_neg_one = CRGB(50, 100, 150);
const int color_zero = CRGB(50, 100, 150);
const int color_one = CRGB(50, 100, 150);
const int color_two = CRGB(50, 100, 150);
const int color_three = CRGB(50, 100, 150);

const int colors[7][2] = {{-3, color_neg_three}, {-2, color_neg_two}, {-1, color_neg_one}, {0, color_zero}, {1, color_one}, {2, color_two}, {3, color_three}};

// PM2.5 data
// [42] = neighborhood
// [10] = space time cube value
const int pm25[41][10] = 
{
{2.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0 ,-3.0},
{2.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0 ,-3.0 ,-3.0},
{3.0 ,2.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0 ,-3.0 ,-3.0},
{2.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0 ,-3.0},
{3.0 ,3.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0 ,-3.0 ,-3.0},
{3.0 ,3.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0 ,-3.0},
{3.0 ,3.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0 ,-3.0},
{3.0 ,3.0 ,3.0 ,3.0 ,3.0 ,2.0 ,0.0 ,0.0 ,0.0 ,-1.0},
{3.0 ,3.0 ,2.0 ,2.0 ,2.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-3.0},
{3.0 ,2.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0 ,-3.0},
{1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0 ,-3.0 ,-3.0},
{2.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0 ,-3.0 ,-3.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0 ,-2.0 ,-3.0 ,-3.0},
{2.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0 ,-3.0 ,-3.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0 ,-3.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0 ,-3.0 ,-3.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0 ,-2.0 ,-3.0 ,-3.0},
{3.0 ,2.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0 ,-3.0},
{3.0 ,3.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0 ,-3.0},
{3.0 ,3.0 ,2.0 ,2.0 ,1.0 ,0.0 ,0.0 ,0.0 ,-2.0 ,-3.0},
{3.0 ,3.0 ,2.0 ,2.0 ,2.0 ,0.0 ,0.0 ,0.0 ,-2.0 ,-3.0},
{3.0 ,3.0 ,3.0 ,3.0 ,3.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0},
{3.0 ,3.0 ,3.0 ,3.0 ,3.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0},
{3.0 ,3.0 ,3.0 ,3.0 ,3.0 ,2.0 ,0.0 ,0.0 ,0.0 ,0.0},
{3.0 ,3.0 ,3.0 ,3.0 ,3.0 ,2.0 ,0.0 ,0.0 ,0.0 ,0.0},
{3.0 ,3.0 ,3.0 ,3.0 ,3.0 ,2.0 ,0.0 ,0.0 ,0.0 ,0.0},
{3.0 ,3.0 ,3.0 ,3.0 ,3.0 ,2.0 ,0.0 ,0.0 ,0.0 ,0.0},
{3.0 ,3.0 ,2.0 ,2.0 ,2.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0},
{3.0 ,3.0 ,3.0 ,3.0 ,3.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0 ,-2.0 ,-3.0 ,-3.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0 ,-2.0 ,-3.0 ,-3.0},
{1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0 ,-3.0 ,-3.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0 ,-3.0 ,-3.0 ,-3.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-2.0 ,-2.0 ,-3.0 ,-3.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-3.0 ,-3.0 ,-3.0 ,-3.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0 ,-2.0 ,-3.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0 ,-3.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0 ,-3.0},
{0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,-1.0 ,-2.0}
};

void setup() {
  for (int i = 0; i < 42; i++) {
    FastLED.addLeds<LED_TYPE, 2, RGB>(leds[i], NUM_LEDS_PER_STRING);
  }

  Serial.begin(9600);

  clear();
  for (int i = 0; i < 10; i++) {
    Serial.print("iterator: "); Serial.print(i); Serial.print(" ");
    Serial.print("pm2.5: "); Serial.print(pm25[20][i]); Serial.println(" ");
    leds[20][i] = colors[pm25[20][i]+3]; 
  }
  FastLED.show();
}

void loop() {
  // put your main code here, to run repeatedly:

}

void clear() {
  for (int i = 0; i < NUM_STRINGS; i++) {
    for (int j = 0; j < NUM_LEDS_PER_STRING; j++) {
      leds[i][j] = CRGB::Black;
    }
  }
  FastLED.show();
}
