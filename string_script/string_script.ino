#include <FastLED.h>

// String info
#define NUM_STRINGS 42
#define NUM_LEDS_PER_STRING 10
#define LED_TYPE WS2811
CRGB leds[NUM_LEDS_PER_STRING];

// Color info
CRGB color_neg_three = CRGB(0, 0, 255);
CRGB color_neg_two = CRGB(0, 200, 255);
CRGB  color_neg_one = CRGB(0, 225, 225);
CRGB  color_zero = CRGB(255, 255, 255);
CRGB  color_one = CRGB(255, 75, 0);
CRGB  color_two = CRGB(255, 50, 0);
CRGB  color_three = CRGB(255, 0, 0);

CRGB  colors[7] = {color_neg_three, color_neg_two, color_neg_one, color_zero, color_one, color_two, color_three};

// PM2.5 data
// [42] = neighborhood
// [10] = space time cube value
const int pm25[42][10] =
{
  {2.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0 , -3.0},
  {2.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0 , -3.0 , -3.0},
  {3.0 , 2.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0 , -3.0 , -3.0},
  {2.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0 , -3.0},
  {3.0 , 3.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0 , -3.0 , -3.0},
  {3.0 , 3.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0 , -3.0},
  {3.0 , 3.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0 , -3.0},
  {3.0 , 3.0 , 3.0 , 3.0 , 3.0 , 2.0 , 0.0 , 0.0 , 0.0 , -1.0},
  {3.0 , 3.0 , 2.0 , 2.0 , 2.0 , 0.0 , 0.0 , 0.0 , -1.0 , -3.0},
  {3.0 , 2.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0 , -3.0},
  {1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0 , -3.0 , -3.0},
  {2.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0 , -3.0 , -3.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0 , -2.0 , -3.0 , -3.0},
  {2.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0 , -3.0 , -3.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0 , -3.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0 , -3.0 , -3.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0 , -2.0 , -3.0 , -3.0},
  {3.0 , 2.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0 , -3.0},
  {3.0 , 3.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0 , -3.0},
  {3.0 , 3.0 , 2.0 , 2.0 , 1.0 , 0.0 , 0.0 , 0.0 , -2.0 , -3.0},
  {3.0 , 3.0 , 2.0 , 2.0 , 2.0 , 0.0 , 0.0 , 0.0 , -2.0 , -3.0},
  {3.0 , 3.0 , 3.0 , 3.0 , 3.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0},
  {3.0 , 3.0 , 3.0 , 3.0 , 3.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0},
  {3.0 , 3.0 , 3.0 , 3.0 , 3.0 , 2.0 , 0.0 , 0.0 , 0.0 , 0.0},
  {3.0 , 3.0 , 3.0 , 3.0 , 3.0 , 2.0 , 0.0 , 0.0 , 0.0 , 0.0},
  {3.0 , 3.0 , 3.0 , 3.0 , 3.0 , 2.0 , 0.0 , 0.0 , 0.0 , 0.0},
  {3.0 , 3.0 , 3.0 , 3.0 , 3.0 , 2.0 , 0.0 , 0.0 , 0.0 , 0.0},
  {3.0 , 3.0 , 2.0 , 2.0 , 2.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0},
  {3.0 , 3.0 , 3.0 , 3.0 , 3.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0 , -2.0 , -3.0 , -3.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0 , -2.0 , -3.0 , -3.0},
  {1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0 , -3.0 , -3.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0 , -3.0 , -3.0 , -3.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -2.0 , -2.0 , -3.0 , -3.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -3.0 , -3.0 , -3.0 , -3.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0 , -2.0 , -3.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -1.0 , -2.0 , -2.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0 , -3.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0 , -3.0},
  {0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , -1.0 , -2.0}
};

void setup() {
  FastLED.addLeds<LED_TYPE, 20, RGB>(leds, NUM_LEDS_PER_STRING);

  Serial.begin(9600);

  clear();

  colorTest();
//  dataTest();

  FastLED.show();
}

void loop() {
  // put your main code here, to run repeatedly:

}

void clear() {
  for (int i = 0; i < NUM_LEDS_PER_STRING; i++) {
    leds[i] = CRGB::Black;
  }
  FastLED.show();
  delay(100);
}

void colorTest() {
  for (int i = 0; i < 7; i++) {
    leds[i] = colors[i];
  }
}

void dataTest() {
  for (int i = 0; i < NUM_LEDS_PER_STRING; i++) {
    Serial.print("iterator: "); Serial.print(i); Serial.print(" ");
    Serial.print("pm2.5: "); Serial.print(pm25[20][i]); Serial.print(" ");
    leds[i] = colors[pm25[20][i] + 3];
  }
}
